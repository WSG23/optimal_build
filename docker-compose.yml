services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: building_compliance
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:password@postgres:5432/building_compliance
      OBJECT_STORAGE_ENDPOINT: http://minio:9000
      OBJECT_STORAGE_BUCKET: documents
      OBJECT_STORAGE_ACCESS_KEY: minioadmin
      OBJECT_STORAGE_SECRET_KEY: minioadmin
      OBJECT_STORAGE_REGION: us-east-1
      OBJECT_STORAGE_USE_SSL: "false"
      PREFECT_API_URL: http://prefect:4200/api
    depends_on:
      - postgres
      - minio
    ports:
      - "8000:8000"

  backend-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ["prefect", "agent", "start", "-q", "default"]
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:password@postgres:5432/building_compliance
      OBJECT_STORAGE_ENDPOINT: http://minio:9000
      OBJECT_STORAGE_BUCKET: documents
      OBJECT_STORAGE_ACCESS_KEY: minioadmin
      OBJECT_STORAGE_SECRET_KEY: minioadmin
      OBJECT_STORAGE_REGION: us-east-1
      OBJECT_STORAGE_USE_SSL: "false"
      PREFECT_API_URL: http://prefect:4200/api
    depends_on:
      - prefect
      - postgres
      - minio

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  prefect:
    image: prefecthq/prefect:2.14-python3.11
    command: ["prefect", "server", "start", "--host", "0.0.0.0"]
    environment:
      PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://postgres:password@postgres:5432/building_compliance
    ports:
      - "4200:4200"
    depends_on:
      - postgres

volumes:
  postgres_data:
  redis_data:
  minio_data:
